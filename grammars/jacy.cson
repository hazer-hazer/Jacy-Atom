'scopeName': 'source.jc'
'fileTypes': ['jc']
'name': 'Jacy'

patterns: [
    {
        comment: 'Control-flow keyword'
        name: 'keyword.control.jacy'
        match: '\\b(if|elif|else|in|!in|for|loop|while|match|return|break|continue|and|or)\\b'
    }

    {
        comment: 'Keyword'
        name: 'keyword.other.jacy'
        match: '\\b(mod|let|ref|use|super|as|move|party)\\b'
    }

    {
        comment: 'Self'
        name: 'keyword.other.self.jacy'
        match: '\\bself\\b'
    }

    {
        comment: 'Function definition'
        begin: '\\b(func)\\b'
        end: '(?=[\\{;])'
        beginCaptures: {
            '1': {name: 'keyword.other.func.jacy'}
        }
        patterns: [
            {
                begin: '([\\p{Alpha}_][\\w]*)'
                end: '(?=[\\{;}])'
                beginCaptures: {
                    '1': {name: 'entity.name.function.jacy'}
                }
                patterns: [
                    {
                        comment: 'Function parameters'
                        match: 'func'
                        name: 'keyword.other.func.jacy'
                    }
                ]
            }
        ]
    }

    {
        comment: 'Call expression'
        match: '\\b([\\p{Alpha}_][\\w]*)\\s*(?=\\()'
        captures: {
            '1': {name: 'entity.name.function.jacy'}
        }
    }

    {include: '#operators'}
    {include: '#modifiers'}
    {include: '#types'}
]

'repository': {
    'operators': {
        patterns: [
            {
                comment: 'Assignment operator'
                name: 'keyword.operator.assignment.jacy'
                match: '\\+=|-=|/=|\\*=|%=|\\^=|&=|\\|=|<<=|>>=|='
            }
        ]
    }

    'modifiers': {
        patterns: [
            {
                comment: 'Mut modifier'
                name: 'storage.modifier.mut.jacy'
                match: '\\bmut\\b'
            }
            {
                comment: 'Pub modifier'
                name: 'storage.modifier.pub.jacy'
                match: '\\bpub\\b'
            }
            {
                comment: 'Const modifier'
                name: 'storage.modifier.const.jacy'
                match: '\\bconst\\b'
            }
            {
                comment: 'Static modifier'
                name: 'storage.modifier.static.jacy'
                match: '\\bstatic\\b'
            }
        ]
    }

    'types': {
        patterns: [
            {
                comment: 'Built-in types'
                name: 'storage.type.core.jacy'
                match: '\\b(bool|char|[ui](?:8|16|32|64|128)|f(?:16|32|64|128)|usize|isize|str|String|Self|Option|Result)\\b'
            }
        ]
    }
}
